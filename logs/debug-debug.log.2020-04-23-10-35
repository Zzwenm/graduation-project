2020-04-23 10:35:31 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] GET "/user/doInfo?token=undefined", parameters={masked}
2020-04-23 10:35:31 [DEBUG](RequestMappingHandlerMapping  ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Mapped to com.example.graduationproject.web.controller.UserController#info(String)
2020-04-23 10:35:31 [DEBUG](RequestResponseBodyMethodProcessor) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2020-04-23 10:35:31 [DEBUG](RequestResponseBodyMethodProcessor) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Writing [ResultDto(code=20000, msg=SUCCESS, data={roles=root, name=Super Admin, avatar=https://wpimg.wallstcn (truncated)...]
2020-04-23 10:35:31 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Completed 200 OK
2020-04-23 10:35:31 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] GET "/book/doFetchData", parameters={}
2020-04-23 10:35:31 [DEBUG](RequestMappingHandlerMapping  ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Mapped to com.example.graduationproject.web.controller.BookController#fetchData()
2020-04-23 10:35:31 [INFO ](BookServiceImpl               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ============================
2020-04-23 10:35:31 [INFO ](BookServiceImpl               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] 获取书籍信息：
2020-04-23 10:35:31 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating a new SqlSession
2020-04-23 10:35:31 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22a1fcee] was not registered for synchronization because synchronization is not active
2020-04-23 10:35:31 [DEBUG](DataSourceUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Fetching JDBC Connection from DataSource
2020-04-23 10:35:31 [DEBUG](SpringManagedTransaction      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4bd4cb3c] will not be managed by Spring
2020-04-23 10:35:31 [DEBUG](queryAll                      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==>  Preparing: SELECT * FROM t_book 
2020-04-23 10:35:31 [DEBUG](queryAll                      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==> Parameters: 
2020-04-23 10:35:31 [DEBUG](queryAll                      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] <==      Total: 2
2020-04-23 10:35:31 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22a1fcee]
2020-04-23 10:35:31 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:31 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:31 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:31 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:31 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:31 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:32 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:32 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Failed to complete request: org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 500 millisecond(s)
2020-04-23 10:35:32 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] "ERROR" dispatch for GET "/error", parameters={}
2020-04-23 10:35:32 [DEBUG](RequestMappingHandlerMapping  ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2020-04-23 10:35:32 [DEBUG](HttpEntityMethodProcessor     ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2020-04-23 10:35:32 [DEBUG](HttpEntityMethodProcessor     ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Writing [{timestamp=Thu Apr 23 10:35:32 GMT+08:00 2020, status=500, error=Internal Server Error, message=Redi (truncated)...]
2020-04-23 10:35:32 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Exiting from "ERROR" dispatch, status 500
2020-04-23 10:35:38 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] GET "/user/doInfo?token=undefined", parameters={masked}
2020-04-23 10:35:38 [DEBUG](RequestMappingHandlerMapping  ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Mapped to com.example.graduationproject.web.controller.UserController#info(String)
2020-04-23 10:35:38 [DEBUG](RequestResponseBodyMethodProcessor) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2020-04-23 10:35:38 [DEBUG](RequestResponseBodyMethodProcessor) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Writing [ResultDto(code=20000, msg=SUCCESS, data={roles=root, name=Super Admin, avatar=https://wpimg.wallstcn (truncated)...]
2020-04-23 10:35:38 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Completed 200 OK
2020-04-23 10:35:38 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] GET "/book/doFetchData", parameters={}
2020-04-23 10:35:38 [DEBUG](RequestMappingHandlerMapping  ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Mapped to com.example.graduationproject.web.controller.BookController#fetchData()
2020-04-23 10:35:38 [INFO ](BookServiceImpl               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ============================
2020-04-23 10:35:38 [INFO ](BookServiceImpl               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] 获取书籍信息：
2020-04-23 10:35:38 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating a new SqlSession
2020-04-23 10:35:38 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@324d6ea1] was not registered for synchronization because synchronization is not active
2020-04-23 10:35:38 [DEBUG](DataSourceUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Fetching JDBC Connection from DataSource
2020-04-23 10:35:38 [DEBUG](SpringManagedTransaction      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4bd4cb3c] will not be managed by Spring
2020-04-23 10:35:38 [DEBUG](queryAll                      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==>  Preparing: SELECT * FROM t_book 
2020-04-23 10:35:38 [DEBUG](queryAll                      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==> Parameters: 
2020-04-23 10:35:38 [DEBUG](queryAll                      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] <==      Total: 2
2020-04-23 10:35:38 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@324d6ea1]
2020-04-23 10:35:38 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:38 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:38 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:38 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:38 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:38 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:39 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:39 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Failed to complete request: org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 500 millisecond(s)
2020-04-23 10:35:39 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] "ERROR" dispatch for GET "/error", parameters={}
2020-04-23 10:35:39 [DEBUG](RequestMappingHandlerMapping  ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2020-04-23 10:35:39 [DEBUG](HttpEntityMethodProcessor     ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2020-04-23 10:35:39 [DEBUG](HttpEntityMethodProcessor     ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Writing [{timestamp=Thu Apr 23 10:35:39 GMT+08:00 2020, status=500, error=Internal Server Error, message=Redi (truncated)...]
2020-04-23 10:35:39 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Exiting from "ERROR" dispatch, status 500
2020-04-23 10:35:50 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, chid=0x2] Storing exception in AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:50 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, chid=0x2] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1133)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2020-04-23 10:35:50 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, chid=0x2] channelInactive()
2020-04-23 10:35:50 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, epid=0x1] deactivating endpoint handler
2020-04-23 10:35:50 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, epid=0x1] notifyQueuedCommands adding 1 command(s) to buffer
2020-04-23 10:35:50 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, chid=0x2] channelInactive() done
2020-04-23 10:35:50 [DEBUG](ConnectionWatchdog            ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, last known addr=aliyun/39.105.201.221:6379] channelInactive()
2020-04-23 10:35:50 [DEBUG](ConnectionWatchdog            ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, last known addr=aliyun/39.105.201.221:6379] scheduleReconnect()
2020-04-23 10:35:50 [DEBUG](ConnectionWatchdog            ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, last known addr=aliyun/39.105.201.221:6379] Reconnect attempt 1, delay 1ms
2020-04-23 10:35:50 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x6c0a5380, /192.168.0.101:59320 -> aliyun/39.105.201.221:6379, chid=0x2] channelUnregistered()
2020-04-23 10:35:50 [INFO ](ConnectionWatchdog            ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Reconnecting, last destination was aliyun/39.105.201.221:6379
2020-04-23 10:35:50 [DEBUG](RedisClient                   ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Resolved SocketAddress aliyun:6379 using RedisURI [host='aliyun', port=6379]
2020-04-23 10:35:50 [DEBUG](ReconnectionHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Reconnecting to Redis at aliyun:6379
2020-04-23 10:35:50 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, [id: 0x322bf2f9] (inactive), chid=0x3] channelRegistered()
2020-04-23 10:35:51 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] channelActive()
2020-04-23 10:35:51 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 1 command(s) buffered
2020-04-23 10:35:51 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] activating endpoint
2020-04-23 10:35:51 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:51 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:51 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:51 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:51 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:51 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] flushCommands()
2020-04-23 10:35:51 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] flushCommands() Flushing 0 commands
2020-04-23 10:35:51 [DEBUG](ConnectionWatchdog            ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, last known addr=aliyun/39.105.201.221:6379] channelActive()
2020-04-23 10:35:51 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] channelActive() done
2020-04-23 10:35:51 [INFO ](ReconnectionHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Reconnected to aliyun:6379, Channel channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379
2020-04-23 10:35:51 [DEBUG](ConnectionWatchdog            ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, last known addr=aliyun/39.105.201.221:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@6cf3fc38)
2020-04-23 10:35:51 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 5 bytes, 1 commands in the stack
2020-04-23 10:35:51 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:51 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:51 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:53 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] GET "/user/doInfo?token=undefined", parameters={masked}
2020-04-23 10:35:53 [DEBUG](RequestMappingHandlerMapping  ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Mapped to com.example.graduationproject.web.controller.UserController#info(String)
2020-04-23 10:35:53 [DEBUG](RequestResponseBodyMethodProcessor) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2020-04-23 10:35:53 [DEBUG](RequestResponseBodyMethodProcessor) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Writing [ResultDto(code=20000, msg=SUCCESS, data={roles=root, name=Super Admin, avatar=https://wpimg.wallstcn (truncated)...]
2020-04-23 10:35:53 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Completed 200 OK
2020-04-23 10:35:53 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] GET "/book/doFetchData", parameters={}
2020-04-23 10:35:53 [DEBUG](RequestMappingHandlerMapping  ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Mapped to com.example.graduationproject.web.controller.BookController#fetchData()
2020-04-23 10:35:53 [INFO ](BookServiceImpl               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ============================
2020-04-23 10:35:53 [INFO ](BookServiceImpl               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] 获取书籍信息：
2020-04-23 10:35:53 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating a new SqlSession
2020-04-23 10:35:53 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18c49889] was not registered for synchronization because synchronization is not active
2020-04-23 10:35:53 [DEBUG](DataSourceUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Fetching JDBC Connection from DataSource
2020-04-23 10:35:53 [DEBUG](SpringManagedTransaction      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4bd4cb3c] will not be managed by Spring
2020-04-23 10:35:53 [DEBUG](queryAll                      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==>  Preparing: SELECT * FROM t_book 
2020-04-23 10:35:53 [DEBUG](queryAll                      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==> Parameters: 
2020-04-23 10:35:53 [DEBUG](queryAll                      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] <==      Total: 2
2020-04-23 10:35:53 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18c49889]
2020-04-23 10:35:53 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:53 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:53 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 7 bytes, 1 commands in the stack
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:53 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@4168829, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:53 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:53 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:53 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:53 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 7 bytes, 1 commands in the stack
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:53 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@77f7b6af, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:53 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:53 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:53 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:53 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 5 bytes, 1 commands in the stack
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:53 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:53 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:53 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:53 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:53 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 5 bytes, 1 commands in the stack
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:53 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:53 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:53 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:53 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:53 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:53 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:53 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 5 bytes, 1 commands in the stack
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:54 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:54 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 5 bytes, 1 commands in the stack
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:54 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:54 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 5 bytes, 1 commands in the stack
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:54 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:54 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 5 bytes, 1 commands in the stack
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:54 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:54 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 5 bytes, 1 commands in the stack
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-23 10:35:54 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, epid=0x1] write() done
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-23 10:35:54 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Received: 5 bytes, 1 commands in the stack
2020-04-23 10:35:54 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x3e6dfbee, /192.168.0.101:59480 -> aliyun/39.105.201.221:6379, chid=0x3] Stack contains: 1 commands
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-23 10:35:54 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-23 10:35:54 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-23 10:35:54 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating a new SqlSession
2020-04-23 10:35:54 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35560aa6] was not registered for synchronization because synchronization is not active
2020-04-23 10:35:54 [DEBUG](DataSourceUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Fetching JDBC Connection from DataSource
2020-04-23 10:35:54 [DEBUG](SpringManagedTransaction      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4bd4cb3c] will not be managed by Spring
2020-04-23 10:35:54 [DEBUG](selectByIdList                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==>  Preparing: SELECT * FROM t_book WHERE id IN ( ? , ? ) 
2020-04-23 10:35:54 [DEBUG](selectByIdList                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==> Parameters: 1(String), 2(String)
2020-04-23 10:35:54 [DEBUG](selectByIdList                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] <==      Total: 2
2020-04-23 10:35:54 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35560aa6]
2020-04-23 10:35:54 [INFO ](BookServiceImpl               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] 榜单：[Book(id=1, name=Python编程快速上手——让繁琐工作自动化（异步图书）, author=斯维加特(Al Sweigart)，王海鹏, price=￥21.99, src=https://images-cn.ssl-images-amazon.com/images/I/51HZLuA0ABL._SX260_.jpg, remark=如今，人们面临的大多数任务都可以通过编写计算机软件来完成。Python是一种解释型、面向对象、动态数据类型的高级程序设计语言。通过Python编程，我们能够解决现实生活中的很多任务。
本书是一本面向实践的Python编程实用指南。本书的目的，不仅是介绍Python语言的基础知识，而且还通过项目实践教会读者如何应用这些知识和技能。本书的首部分介绍了基本Python编程概念，第二部分介绍), Book(id=2, name=Python网络爬虫技术, author=江吉彬，张良均, price=￥24.70, src=https://images-cn.ssl-images-amazon.com/images/I/41cfMQfa2RL.jpg, remark=张良均，信息系统项目管理师，泰迪杯全国大学生数据挖掘竞赛（www.tipdm.org）发起人。华南师范大学、广东工业大学兼职教授，广东省工业与应用数学学会理事。兼有大型高科技企业和高校的工作经历，主要从事大数据挖掘及其应用的策划、研发及咨询培训。全国计算机技术与软件专业技术资格（水平）考试继续教育和CDA数据分析师培训讲师。发表数据挖掘相关论文数20余篇，已取得国家发明专利12项，主)]
2020-04-23 10:35:54 [INFO ](BookServiceImpl               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ============================
2020-04-23 10:35:54 [DEBUG](RequestResponseBodyMethodProcessor) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2020-04-23 10:35:54 [DEBUG](RequestResponseBodyMethodProcessor) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Writing [ResultDto(code=20000, msg=查询成功！, data=BookVo(books=[Book(id=1, name=Python编程快速上手——让繁琐工作自动化（异步图书）, au (truncated)...]
2020-04-23 10:35:54 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Completed 200 OK
