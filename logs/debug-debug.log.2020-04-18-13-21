2020-04-18 13:21:45 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] GET "/recommend?userId=1", parameters={masked}
2020-04-18 13:21:45 [DEBUG](RequestMappingHandlerMapping  ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Mapped to com.example.graduationproject.web.controller.RecommendController#recommendByUserId(String, Model)
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-18 13:21:45 [DEBUG](RedisClient                   ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Trying to get a Redis connection for: RedisURI [host='localhost', port=6379]
2020-04-18 13:21:45 [DEBUG](RedisClient                   ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Resolved SocketAddress localhost:6379 using RedisURI [host='localhost', port=6379]
2020-04-18 13:21:45 [DEBUG](RedisClient                   ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Connecting to Redis at localhost:6379
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, [id: 0x9a206776] (inactive), chid=0x2] channelRegistered()
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] channelActive()
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] activating endpoint
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] flushCommands()
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] flushCommands() Flushing 0 commands
2020-04-18 13:21:45 [DEBUG](ConnectionWatchdog            ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] channelActive()
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] channelActive() done
2020-04-18 13:21:45 [DEBUG](RedisClient                   ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Connecting to Redis at localhost:6379: Success
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](ConnectionWatchdog            ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, last known addr=localhost/127.0.0.1:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@616ab0e7)
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 5 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=SELECT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 9 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@17aed01a, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 8 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@7945d977, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 8 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@5d9c679e, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 9 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@58754850, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 9 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@393a6d44, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 9 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@6ee38575, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 9 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@507dbfa0, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 8 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@22b84a37, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 8 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@48024369, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Opening RedisConnection
2020-04-18 13:21:45 [DEBUG](RedisChannelHandler           ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](DefaultEndpoint               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, epid=0x2] write() done
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2020-04-18 13:21:45 [DEBUG](CommandEncoder                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Received: 9 bytes, 1 commands in the stack
2020-04-18 13:21:45 [DEBUG](CommandHandler                ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] [channel=0x87e8e4fb, /127.0.0.1:49323 -> localhost/127.0.0.1:6379, chid=0x2] Stack contains: 1 commands
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2020-04-18 13:21:45 [DEBUG](RedisStateMachine             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@3ab8af31, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
2020-04-18 13:21:45 [DEBUG](RedisConnectionUtils          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing Redis Connection.
2020-04-18 13:21:45 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating a new SqlSession
2020-04-18 13:21:45 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57f7e31f] was not registered for synchronization because synchronization is not active
2020-04-18 13:21:45 [DEBUG](DataSourceUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Fetching JDBC Connection from DataSource
2020-04-18 13:21:45 [DEBUG](SpringManagedTransaction      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@370a7662] will not be managed by Spring
2020-04-18 13:21:45 [DEBUG](getItemDetailListByIds        ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==>  Preparing: SELECT * FROM contact WHERE id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) 
2020-04-18 13:21:45 [DEBUG](getItemDetailListByIds        ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==> Parameters: 123(String), 11(String), 45(String), 456(String), 222(String), 555(String), 543(String), 46(String), 88(String), 124(String)
2020-04-18 13:21:45 [DEBUG](getItemDetailListByIds        ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] <==      Total: 10
2020-04-18 13:21:45 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57f7e31f]
2020-04-18 13:21:45 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating a new SqlSession
2020-04-18 13:21:45 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@789e6c90] was not registered for synchronization because synchronization is not active
2020-04-18 13:21:45 [DEBUG](DataSourceUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Fetching JDBC Connection from DataSource
2020-04-18 13:21:45 [DEBUG](SpringManagedTransaction      ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@370a7662] will not be managed by Spring
2020-04-18 13:21:45 [DEBUG](getItemListByIds              ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==>  Preparing: SELECT * FROM product WHERE product_id IN ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) 
2020-04-18 13:21:45 [DEBUG](getItemListByIds              ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] ==> Parameters: 123(String), 11(String), 45(String), 456(String), 222(String), 555(String), 543(String), 46(String), 88(String), 124(String)
2020-04-18 13:21:45 [DEBUG](SqlSessionUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@789e6c90]
2020-04-18 13:21:45 [DEBUG](XmlBeanDefinitionReader       ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Loaded 11 bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'DB2'
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'Derby'
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'H2'
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'HDB'
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'HSQL'
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'Informix'
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'MS-SQL'
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'MySQL'
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'Oracle'
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'PostgreSQL'
2020-04-18 13:21:45 [DEBUG](DefaultListableBeanFactory    ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Creating shared instance of singleton bean 'Sybase'
2020-04-18 13:21:45 [DEBUG](SQLErrorCodesFactory          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper@b5ac0c1]
2020-04-18 13:21:45 [DEBUG](DataSourceUtils               ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Fetching JDBC Connection from DataSource
2020-04-18 13:21:45 [DEBUG](SQLErrorCodesFactory          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] SQL error codes for 'MySQL' found
2020-04-18 13:21:45 [DEBUG](SQLErrorCodesFactory          ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Caching SQL error codes for DataSource [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper@b5ac0c1]: database product name is 'MySQL'
2020-04-18 13:21:45 [DEBUG](SQLErrorCodeSQLExceptionTranslator) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Translating SQLException with SQL state '42S02', error code '1146', message [Table 'con.product' doesn't exist] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'con.product' doesn't exist
### The error may exist in file [F:\毕业设计\graduation-project\graduation-project-web\target\classes\mapper\ItemMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT * FROM product         WHERE product_id IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )
### Cause: java.sql.SQLSyntaxErrorException: Table 'con.product' doesn't exist
]
2020-04-18 13:21:45 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Failed to complete request: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'con.product' doesn't exist
### The error may exist in file [F:\毕业设计\graduation-project\graduation-project-web\target\classes\mapper\ItemMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT * FROM product         WHERE product_id IN          (               ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          ,              ?          )
### Cause: java.sql.SQLSyntaxErrorException: Table 'con.product' doesn't exist
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'con.product' doesn't exist
2020-04-18 13:21:45 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] "ERROR" dispatch for GET "/error?userId=1", parameters={masked}
2020-04-18 13:21:45 [DEBUG](RequestMappingHandlerMapping  ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)
2020-04-18 13:21:45 [DEBUG](ContentNegotiatingViewResolver) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Selected 'text/html' given [text/html, text/html;q=0.8]
2020-04-18 13:21:45 [DEBUG](DispatcherServlet             ) [TxId :  , SpanId : ] [ET:,AN:,SN:,CN:,CI:] Exiting from "ERROR" dispatch, status 500
